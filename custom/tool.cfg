################################################################################
# Creality K2 macros for better ORCA Sliser compatibility and other improvements
# Based on ideas: https://github.com/jamincollins great thanks!
# GPL-3.0 license 
# Author: Mikhail Ivanov masluf@gmail.com

[respond]

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro BOX_RETRUDE_MATERIAL_WITH_TNN]
rename_existing: BOX_RETRUDE_MATERIAL_WITH_TNN1
gcode:
    RESPOND MSG="BOX_RETRUDE_MATERIAL_WITH_TNN {rawparams}"
    BOX_RETRUDE_MATERIAL_WITH_TNN1 {rawparams}

[gcode_macro BOX_RETRUDE_MATERIAL]
rename_existing: BOX_RETRUDE_MATERIAL1
gcode:
    RESPOND MSG="BOX_RETRUDE_MATERIAL {rawparams}"
    BOX_RETRUDE_MATERIAL1 {rawparams}

[gcode_macro  BOX_RETRUDE_PROCESS]
rename_existing:BOX_RETRUDE_PROCESS1
gcode:
    RESPOND MSG="BOX_RETRUDE_PROCESS {rawparams}"
    BOX_RETRUDE_PROCESS1 {rawparams}

[gcode_macro BOX_EXTRUDE_MATERIAL]
rename_existing: BOX_EXTRUDE_MATERIAL1
gcode:
    RESPOND MSG="BOX_EXTRUDE_MATERIAL {rawparams}"
    BOX_EXTRUDE_MATERIAL1 {rawparams}

[gcode_macro BOX_EXTRUDE_PROCESS]
rename_existing: BOX_EXTRUDE_PROCESS1
gcode:
    RESPOND MSG="BOX_EXTRUDE_PROCESS {rawparams}"
    BOX_EXTRUDE_PROCESS1 {rawparams}

[gcode_macro  BOX_EXTRUDE_2_PROCESS]
rename_existing: BOX_EXTRUDE_2_PROCESSNN
gcode:
    RESPOND MSG="BOX_EXTRUDE_2_PROCESS {rawparams}"
    BOX_EXTRUDE_2_PROCESSNN {rawparams}

# [gcode_macro box_extrude_material_stage8]
# rename_existing: box_extrude_material_stage8.1
# gcode:
#     RESPOND MSG="box_extrude_material_stage8 {rawparams}"
#     box_extrude_material_stage8.1 {rawparams}

[gcode_macro  BOX_EXTRUDER_EXTRUDE]
rename_existing: BOX_EXTRUDER_EXTRUDE1
gcode:
    RESPOND MSG="BOX_EXTRUDER_EXTRUDE {rawparams}"
    BOX_EXTRUDER_EXTRUDE1 {rawparams}

[gcode_macro  BOX_TN_EXTRUDE]
rename_existing: BOX_TN_EXTRUDE1
gcode:
    RESPOND MSG="BOX_TN_EXTRUDE {rawparams}"
    BOX_TN_EXTRUDE1 {rawparams}

[gcode_macro  BOX_SEND_DATA]
rename_existing: BOX_SEND_DATA1
gcode:
    RESPOND MSG="BOX_SEND_DATA1 {rawparams}"
    BOX_SEND_DATA1 {rawparams}

[gcode_macro  BOX_MODIFY_TN]
rename_existing: BOX_MODIFY_TN1
gcode:
    RESPOND MSG="BOX_MODIFY_TN {rawparams}"
    BOX_MODIFY_TN1 {rawparams}

[gcode_macro  BOX_MODIFY_TN_DATA]
rename_existing: BOX_MODIFY_TN_DATA1
gcode:
    RESPOND MSG="BOX_MODIFY_TN_DATA {rawparams}"
    BOX_MODIFY_TN_DATA1 {rawparams}

[gcode_macro  BOX_SET_BOX_MODE]
rename_existing: BOX_SET_BOX_MODE1
gcode:
    RESPOND MSG="BOX_SET_BOX_MODE {rawparams}"
    BOX_SET_BOX_MODE1 {rawparams}

[gcode_macro  BOX_SET_TEMP]
rename_existing: BOX_SET_TEMP1
gcode:
    RESPOND MSG="BOX_SET_TEMP {rawparams}"
    BOX_SET_TEMP1 {rawparams}

# [gcode_macro BOX_NUM_POS]
# rename_existing: BOX_NUM_POS1
# gcode:
#     RESPOND MSG="BOX_NUM_POS {rawparams}"
#     BOX_NUM_POS1 {rawparams}

[gcode_macro BOX_SET_PRE_LOADING]
rename_existing: BOX_SET_PRE_LOADING1
gcode:
    RESPOND MSG="BOX_SET_PRE_LOADING {rawparams}"
    BOX_SET_PRE_LOADING1 {rawparams}

[gcode_macro BOX_MATERIAL_FLUSH]
rename_existing: BOX_MATERIAL_FLUSH1
gcode:
    RESPOND MSG="BOX_MATERIAL_FLUSH {rawparams}"
    BOX_MATERIAL_FLUSH1 {rawparams}

[gcode_macro BOX_MATERIAL_CHANGE_FLUSH]
rename_existing: BOX_MATERIAL_CHANGE_FLUSH1
gcode:
    RESPOND MSG="BOX_MATERIAL_CHANGE_FLUSH {rawparams}"
    BOX_MATERIAL_CHANGE_FLUSH1 {rawparams}

[gcode_macro BOX_EXTRUSION_ALL_MATERIALS]
rename_existing: BOX_EXTRUSION_ALL_MATERIALS1
gcode:
    RESPOND MSG="BOX_EXTRUSION_ALL_MATERIALS {rawparams}"
    BOX_EXTRUSION_ALL_MATERIALS1 {rawparams}

    
# [duplicate_pin_override]
# pins: PC5,PA0,PC7,PB7,PB8,PB9,PB10,PB5,PB6,PA1,PB15,PB11,PB12,PB13,PA10,PA9,PB2,PB14,PB1 #,PA5,nozzle_mcu:PA11

# [gcode_button fb1]
# pin: PA5
# press_gcode:
#   {action_respond_info("buffer in")}
# release_gcode:
#   {action_respond_info("buffer out")}
[extruder]
min_extrude_temp: 0

[save_variables]
filename: ./mnt/UDISK/printer_data/config/custom/custom_vars.cfg
# tool: last selected tool. -1 mean all tools are retruded
# variable_temp: #temperature of current filament
# variable_flowrate:  #max flowrate for flush
# variable_flush_len:  #length of flushing

# [gcode_macro PRINTER_PARAM]
# variable_dbg: 1
# variable_custom_toolchange: 1

# BOX_NOZZLE_CLEAN
# BOX_CUT_MATERIAL
# BOX_EXTRUDE_MATERIAL TNN=T1A
# BOX_EXTRUDER_EXTRUDE TNN=T1A
# BOX_MATERIAL_FLUSH LEN=100 VELOCITY=360 TEMP=220
# BOX_RETRUDE_MATERIAL_WITH_TNN TNN=T1A
# BOX_QUIT_MATERIAL
# SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder1"'
# {% set svv = printer.save_variables.variables %}
# var={svv.currentextruder}

[delayed_gcode INIT_VARS_CFG]
initial_duration: 10
gcode:
    {% set svv = printer.save_variables.variables %}
    # {% set tool = svv.tool %}
    {% if svv.tool is not defined %}
        SAVE_VARIABLE VARIABLE=tool VALUE=-1
    {% endif %}

[gcode_macro TOOL_MSG]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set tool = svv.tool %}
    RESPOND MSG="tool: {tool}"

[gcode_macro DBG_MSG]
gcode:
    # {% set svv = printer.save_variables.variables %}
    # {% set tool = svv.tool %}
    # RESPOND MSG="tool: {tool}" #, boxCount: {connected_box_count}, temp: {temp}, flowrate: {flowrate}, flush_len:{flush_len}, tt:{tt}"
    # RESPOND MSG='{printer['filament_rack'].not_pin}, {printer['filament_rack'].not_pin.value}'
    # {% for key1 in printer['filament_rack'] %}
    #     RESPOND MSG='{key1}'
    # {% endfor %}
    # printer['box'].enable = 0

[gcode_macro TOOLCHANGE]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    {% set svv = printer.save_variables.variables %}
    {% set prev_tool = svv.tool %}
    {% set tool = params.TOOL|default(0)|int %}
    {% set tt = params.TOOL|default(0)|string %}
    
    {% set box1 = printer['box'].T1['state'] %}
    {% set box2 = printer['box'].T2['state'] %}
    {% set box3 = printer['box'].T3['state'] %}
    {% set box4 = printer['box'].T4['state'] %}
    {% set connected_box_count = 0 %}

    {% if box4 == 'connect' %}
        {% set connected_box_count = 4 %}
    {% elif box3 == 'connect' %}
        {% set connected_box_count = 3 %}
    {% elif box2 == 'connect' %}
        {% set connected_box_count = 2 %}
    {% elif box1 == 'connect' %}
        {% set connected_box_count = 1 %}
    {% endif %}

    RESPOND MSG="tool: {tool}, prevTool: {prev_tool}, boxCount: {connected_box_count}"

    {% if (connected_box_count == 4 and tool>=16) or (connected_box_count == 2 and tool>=12) or (connected_box_count == 2 and tool>=8) or (connected_box_count == 1 and tool>=4) %}
        {% if printer['filament_switch_sensor filament_sensor'].filament_detected == True and (prev_tool == tool or prev_tool == -1) %}
            # SET_GCODE_VARIABLE MACRO= VARIABLE=state VALUE=1
            # {% set printer['box'].enable = 0 %}
            BOX_ENABLE_CFS_PRINT ENABLE=0
            BOX_GO_TO_EXTRUDE_POS
            M83
            G1 E50 F120
            BOX_NOZZLE_CLEAN
        {% elif printer['filament_switch_sensor filament_sensor'].filament_detected == True and (prev_tool != tool or prev_tool != -1) %}
            RESPOND MSG="CFS Tool in toolhead, retrude"
            BOX_RETRUDE_MATERIAL
        {% else %}
            SAVE_VARIABLE VARIABLE=tool VALUE={tool}
        {% endif %}
        # BOX_MATERIAL_FLUSH LEN=100 VELOCITY=360 TEMP=220
    {% else %}
        # {% if printer['filament_switch_sensor filament_sensor'].filament_detected == True and (prev_tool == tool or prev_tool == -1) %}
        {% set tt = tt+".1" %}
        #TODO: REplace TT with custom process
        T{tt} {rawparams}
        SAVE_VARIABLE VARIABLE=tool VALUE={tool}
    {% endif %}

    

    # {% set svv = printer.save_variables.variables %}
    # {% set temp = svv.temp %}
    # {% set flowrate = svv.flowrate %}
    # {% set flush_len = svv.flush_len %}
    # {% set tt = tool+".1" %}
    # RESPOND MSG="tool: {tool}, boxCount: {connected_box_count}, temp: {temp}, flowrate: {flowrate}, flush_len:{flush_len}, tt:{tt}"
    # T{tt}

[gcode_macro T17]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set tool = svv.tool %}

    {% set box1 = printer['box'].T1['state'] %}
    {% set box2 = printer['box'].T2['state'] %}
    {% set box3 = printer['box'].T3['state'] %}
    {% set box4 = printer['box'].T4['state'] %}
    {% set connected_box_count = 0 %}

    {% if box4 == 'connect' %}
        {% set connected_box_count = 4 %}
    {% elif box3 == 'connect' %}
        {% set connected_box_count = 3 %}
    {% elif box2 == 'connect' %}
        {% set connected_box_count = 2 %}
    {% elif box1 == 'connect' %}
        {% set connected_box_count = 1 %}
    {% endif %}

    {% if printer['filament_switch_sensor filament_sensor'].filament_detected == True %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            G28
        {% endif %}
        SAVE_GCODE_STATE NAME=myMoveState
        BOX_MOVE_TO_CUT
        M400
        BOX_GO_TO_EXTRUDE_POS
        M400
        G91
        G0 E-10 F360
        G90
        M400
        {% if (connected_box_count == 4 and tool < 16) or (connected_box_count == 2 and tool < 12) or (connected_box_count == 2 and tool < 8) or (connected_box_count == 1 and tool < 4) %}
            RESPOND MSG="CFS Tool in toolhead, retrude"
            BOX_RETRUDE_MATERIAL
            BOX_NOZZLE_CLEAN
        {% endif %}
        SAVE_VARIABLE VARIABLE=tool VALUE=-1
        RESTORE_GCODE_STATE NAME=myMoveState
    {% else %}
        RESPOND MSG="Toolhead is empty"
    {% endif %}


# [gcode_macro START_PRINT]
# rename_existing: START_PRINT_BASE
# gcode:
    # {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    # SAVE_VARIABLE VARIABLE=temp VALUE={EXTRUDER_TEMP}
    # START_PRINT_BASE {rawparams}


[gcode_macro END_PRINT]
gcode:
    END_PRINT_BASE
    RESTORE_LIMITS
    M400
    G92 E0
    # BOX_END 
    # BOX_END_PRINT
    Qmode_exit
    EXCLUDE_OBJECT_RESET
    PRINT_PREPARE_CLEAR
    M220 S100
    SET_VELOCITY_LIMIT ACCEL=5000 ACCEL_TO_DECEL=5000
    TURN_OFF_HEATERS
    # M107 P1
    M107 P2
    END_PRINT_POINT
    WAIT_TEMP_START
    M106 P0 S127
    # M141 S0
    SET_PIN PIN=extruder_fan VALUE=0
    BOX_NOZZLE_CLEAN

# [gcode_macro END_PRINT]
# rename_existing: END_PRINT_CR
# gcode:
#     END_PRINT_CR

[gcode_macro T0]
rename_existing: T0.1
gcode:
    TOOLCHANGE TOOL=0

[gcode_macro T1]
rename_existing: T1.1
gcode:
    TOOLCHANGE TOOL=1 {rawparams}

[gcode_macro T2]
rename_existing: T2.1
gcode:
    TOOLCHANGE TOOL=2

[gcode_macro T3]
rename_existing: T3.1
gcode:
    TOOLCHANGE TOOL=3

[gcode_macro T4]
rename_existing: T4.1
gcode:
    TOOLCHANGE TOOL=4

[gcode_macro T5]
rename_existing: T5.1
gcode:
    TOOLCHANGE TOOL=5

[gcode_macro T6]
rename_existing: T6.1
gcode:
    TOOLCHANGE TOOL=6

[gcode_macro T7]
rename_existing: T7.1
gcode:
    TOOLCHANGE TOOL=7

[gcode_macro T8]
rename_existing: T8.1
gcode:
    TOOLCHANGE TOOL=8

[gcode_macro T9]
rename_existing: T9.1
gcode:
    TOOLCHANGE TOOL=9

[gcode_macro T10]
rename_existing: T10.1
gcode:
    TOOLCHANGE TOOL=10

[gcode_macro T11]
rename_existing: T11.1
gcode:
    TOOLCHANGE TOOL=11

[gcode_macro T12]
rename_existing: T12.1
gcode:
    TOOLCHANGE TOOL=12

[gcode_macro T13]
rename_existing: T13.1
gcode:
    TOOLCHANGE TOOL=13

[gcode_macro T14]
rename_existing: T14.1
gcode:
    TOOLCHANGE TOOL=14

[gcode_macro T15]
rename_existing: T15.1
gcode:
    TOOLCHANGE TOOL=15

[gcode_macro T16]
# rename_existing: T16.1
gcode:
    TOOLCHANGE TOOL=16